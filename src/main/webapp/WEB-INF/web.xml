<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!--spring工厂启动-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:bean.xml</param-value>
    </context-param>

    <!--springMVC工厂启动-->
    <servlet>
        <servlet-name>mvc01</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--声明工厂位置，并启动springmvc的工厂-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:mvc.xml</param-value>
        </init-param>
        <!--项目启动时创建-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 会从spring工厂中获取和它同名的bean(id="shiroFilter"),调用bean的doFilter方法，进行访问控制-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--静态资源处理-->
    <servlet-mapping>
        <servlet-name>mvc01</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--处理因css/js/png/boostrap/jquery等导致的页面混乱问题-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.css</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--加参数filter，保证不出现乱码，主要针对post请求-->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--rest过滤器，保证表单等能将post转为对应的put和delete进行发送【必须放到编码过滤器之后】-->
    <filter>
        <filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 如果Put请求中的 ”id=1&name=zhj&...“ 含有如此参数，则可以配置如下过滤器
     【与前面的表单解决方法的过滤器，必须放到编码过滤器之后】-->
    <!--<filter>-->
        <!--<filter-name>put</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>put</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
</web-app>